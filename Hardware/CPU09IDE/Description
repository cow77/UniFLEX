CPU09IDE

Provides:
* full DMA at 4 MHz busclock with no waitstates
* single-word DMA and multi-word DMA
* PIO mode
* can serve up to 2 IDE drives
* 16 bit data in DMA mode
* end of command interrupt capability 

Description:
The CPU09IDE card serves as a DMA driven interface for the CPU09 system with a IDE/PATA disk. 4 22V10 GAL's serve as glue logic.
It has a 40 pin connector that directly interfaces to the disk drive. The memory map of the card is 32 bytes of which the first 16
correspond to the 8 registers that an IDE/PATA disk exposes. The access is 16 bits, but in PIO mode the upper 8 bits are discarded.
The upper 16 bytes hold the 16 bit address register, the extended address and control register and a status register. 
The card format is Eurocard (160x100mm) and has a DIN41612 a-c connector.

All design data is released under GPL V3. Copyright (c) C. Schoenmakers 2019

2019-10-14: populated and tested the board (rev 1.o), found 2 incorrect things. 
1) the text irq and firq at the jumper location are exchanged. For correct operation the jumper should sit on 'firq' (= irq).
2) due to a labeling error on a pin a connection is missing, a wire between pin 6 of G4 to pin 15 of G3. This is easy to
apply.

I will place rev 1.0.1 soon where these things are corrected.

So with the correction's the board works as expected.

A short word about the jumpers. The interrupt jumper should be in the position as on the photo.
The jumpers A/B/C determine the board base address. With all jumpers placed the address is $XX00. As the address size of
the board is $20 we can place an IDE board at addresses XX00/XX20/XX40/XX60/XX80/XXA0/XXC0/XXE0. UniFLEX, as the kernel
sources are at this moment, expects the board to respond at $F100.


About (suitable) disks:  
* the drive _must_ support LBA

2020-04-18:

Just discovered after some serious research tha an UniFLEX disk partition/image _MUST_ have a .badblocks file as fdn #2 !!
It is that fdn #2 get some special treatment in the kernel code.

My initial problem was, I copy a directory tree from one disk tp another with copy-dir +dolP and that this action predictably
freezes at some point in the transfer, same file each time!. Finally I found that the newly created directory got fdn #2 and
that was why these strange things happened. The process would sleep on a fdn update but was never awakened again.

