UniFLEX Monitor ROM                  23:24:09  May 17, 2020   Page    1Equates                                                                                       *                     * generic defines for unibug ROM                     *                               opt    lis                       0000                         abs                                          *                     * Monitor ROM for booting UniFLEX and handling the UniFLEX                     * interrupt processing.                     *                                          * low ram interrupt vectors                       0000                         org    sysseg<<12                       0000               irqvec    rmb    2         maskable interrupt  0002               swivec    rmb    2         swi 1  0004               sw2vec    rmb    2         swi 2  0006               sw3vec    rmb    2         swi 3  0008               nmivec    rmb    2         non-maskable interrupt  000A               frqvec    rmb    2         fast interrupt                                          * low memory system storage                       000C               cputyp    rmb    1         cpu type  000D               cpumod    rmb    1         cpu mode 63/68  000E               usrtop    rmb    1         current user segment  000F               kernel    rmb    1         kernel/user state (-1 = user address space)  0010               chpflg    rmb    1         change process flag  0011               chtask    rmb    2         change process vector  0013               corcnt    rmb    1         core segment count  0014               lstmem    rmb    2         mem table end marker  0016               teluch    rmb    1         user change flag  0017               memmsk    rmb    1         dat cell mask  0018               romspr    rmb    1         spare byte for rom                                          * System and global memory maps  0100                         org    (sysseg<<12)+$100                       0100               sysmap    rmb    segadr    system memory map  0110               cormap    rmb    segmax    available memory list                                          * User block definitions                       BF38                         org    (usrseg<<12)+$f38                                    BF00  ubasea    set    (usrseg<<12)+$f00               00BF  ubasdp    set    ubasea/256                     *               BF38  sysstk    equ    *         system stack starts hereUniFLEX Monitor ROM                  23:24:10  May 17, 2020   Page    2Equates                                               BF38               udummy    rmb    3         spare  BF3B               ustksz    rmb    1         save interrupt stack depth  BF3C               uargp     rmb    2         user argv pointer  BF3E               uswi2v    rmb    2         swi2 vector save                     * this _should_ be at ff40.  BF40               usp       rmb    2         user stack pointer  BF42               urelod    rmb    1         map reload flag  BF43               umapno    rmb    1         task map number  BF44               usrmap    rmb    segadr    user task memory map                     *  BF54               usercc    rmb    1         condition codes  BF55               userd     rmb    2         D register  BF57               userx     rmb    2         X register  BF59               userpc    rmb    2         PC register  BF5B               userpb    rmb    1         sys call post byte                                          UniFLEX Monitor ROM                  23:24:10  May 17, 2020   Page    3Initial ROM Processing                                                                        *                     * Rom code starts here                     *                       F800                         org    romadr                     *                     * I/O Vectors                     *  F800 F80E                    fdb    rinit     cold start monitor  F802 FBF2                    fdb    tinit     console init  F804 FB88                    fdb    inchck    test console character ready  F806 FB90                    fdb    inch      read one character fromconsoleterminal  F808 FBA7                    fdb    outch     write one character to console  F80A FB5B                    fdb    pdata     print a string (X)  F80C FB72                    fdb    hexbyt    print one hex byte (A)                                          *                     * bring monitor to life                     *  F80E               rinit     seti  F810 10CE BE80               lds    #romstk   set stack  F814 4F                      clra             set dp  F815 1F   8B                 tfr    a,dp                     *  F817 8E   F400               ldx    #datbox   fill datbox with blackholes  F81A 108E 0400               ldy    #datsiz  F81E 86   FD                 lda    #nomap    black hole  F820 8C   F40F     rinit9    cmpx   #datbox+romseg don't vanish myself  F823 27   02                 beq    rinit8  F825 A7   84                 sta    0,x  F827 30   01       rinit8    leax   1,x  F829 31   3F                 leay   -1,y  F82B 26   F3                 bne    rinit9                     *  F82D CC   0100               ldd    #rammap  F830 B7   F40B               sta    datbox+usrseg setup user and system segments  F833 F7   F400               stb    datbox+sysseg  F836 86   FD                 lda    #nomap    fill system map with blackholes  F838 C6   10                 ldb    #segadr   get length of map  F83A 8E   0110               ldx    #sysmap+segadr point to map  F83D A7   82       rinit2    sta    0,-x      stuff into map cell  F83F 5A                      decb             dec the count  F840 26   FB                 bne    rinit2                     *  F842 CC   FEFF               ldd    #rommap   complete the initial map  F845 ED   0E                 std    ioseg,x   set io and rom   F847 FD   F40E               std    datbox+ioseg  F84A CC   0100               ldd    #rammap  F84D A7   0B                 sta    usrseg,x  set user segment  F84F 97   0E                 sta    usrtop  F851 E7   84                 stb    sysseg,x  set system segmentUniFLEX Monitor ROM                  23:24:10  May 17, 2020   Page    4Initial ROM Processing                                F853 4F                      clra             init the direct page registers  F854 97   0C                 sta    cputyp    clear cpu type  F856 97   0D                 sta    cpumod  F858 97   10                 sta    chpflg    clear change task flag  F85A 97   13                 sta    corcnt    zero core count  F85C B7   BF42               sta    urelod  F85F B7   BF43               sta    umapno  F862 97   17                 sta    memmsk  F864 97   16                 sta    teluch                     *  F866 B7   FE03               sta    tlatch    initializes latch to 0                     *  F869 86   04                 lda    #$04      select data register  F86B B7   F005               sta    monpcra  F86E B7   F007               sta    monpcrb  F871 4F                      clra             all output  F872 B7   F006               sta    monpdrb   LEDS off  F875 B7   F004               sta    monpdra   timer stop  F878 B7   F005               sta    monpcra   dir register  F87B B7   F007               sta    monpcrb  F87E 86   0F                 lda    #$0f      select timer/rom control  F880 B7   F004               sta    monpdra  F883 86   FF                 lda    #$ff  F885 B7   F006               sta    monpdrb  F888 86   04                 lda    #$04      select data register  F88A B7   F005               sta    monpcra  F88D B7   F007               sta    monpcrb   disabled mem trap irq                     *  F890 BD   FBF2               jsr    tinit     init the terminal  F893 8E   FC08               ldx    #hello    point to string  F896 BD   FB5B               jsr    pdata     print the string  F899 108E 0000               ldy    #irqvec   point to int vectors  F89D 8E   FB09               ldx    #unhand   and unhandeled routine  F8A0 C6   06                 ldb    #6        set count  F8A2 AF   A1       rinit4    stx    0,y++     store vector  F8A4 30   07                 leax   7,x       point to next panic  F8A6 5A                      decb  F8A7 26   F9                 bne    rinit4  F8A9 9F   11                 stx    chtask    set change task vector                     UniFLEX Monitor ROM                  23:24:11  May 17, 2020   Page    5Main Monitor Loop                                                                             *                     * Main monitor loop (command processor)                     *                                          * Loop starts here                       F8AB               montor      F8AB 33   E4                 leau   0,s       mark stack  F8AD 32   E8 E4              leas   -dlen,s   make temp space  F8B0 8E   FC34     nxtcmd    ldx    #prompt   point to prompt string  F8B3 BD   FB5B               jsr    pdata     output it  F8B6 BD   FB90               jsr    inch      get response  F8B9 BD   FB66               jsr    outsp     output space  F8BC 8E   F8D1               ldx    #commnd   point to command table  F8BF 8D   05                 bsr    search    search for command  F8C1 AD   98 01              jsr    [1,x]     execute command  F8C4 20   EA                 bra    nxtcmd    repeat                                          * Search command table for command                       F8C6 A1   84       search    cmpa   0,x       is it this guy?  F8C8 27   06                 beq    searc2  F8CA 30   03                 leax   3,x       skip this one  F8CC 6D   84                 tst    0,x       end of list?  F8CE 26   F6                 bne    search  F8D0 39            searc2    rts              return                                          * Command table                       F8D1 0D            commnd    fcb    $d        carriage return  F8D2 F950                    fdb    dummy  F8D4 43                      fcb    'C        Configure command  F8D5 F8E9                    fdb    figlef  F8D7 44                      fcb    'D        Disk boot  F8D8 F915                    fdb    dboot  F8DA 45                      fcb    'E        Examine  F8DB F951                    fdb    examine  F8DD 4D                      fcb    'M  F8DE FC45                    fdb    modify  F8E0 56                      fcb    'V        Mapper  F8E1 F9D0                    fdb    mapper  F8E3 4A                      fcb    'J  F8E4 FCA4                    fdb    jumpprg  F8E6 00                      fcb    0         end of table  F8E7 F94A                    fdb    badcmd                                          * Configure the system command                       F8E9 BD   FA51     figlef    jsr    config    do configuration  F8EC 96   13                 lda    corcnt    get core count  F8EE 8B   07                 adda   #7        add in system core countUniFLEX Monitor ROM                  23:24:11  May 17, 2020   Page    6Main Monitor Loop                                     F8F0 A7   5A                 sta    count,u   save it  F8F2 CC   0000               ldd    #0        set count to 0  F8F5 8B   04       figle2    adda   #4        covert to decimal  F8F7 19                      daa  F8F8 C9   00                 adcb   #0        add in carry  F8FA 6A   5A                 dec    count,u  F8FC 26   F7                 bne    figle2    finished?  F8FE 5D                      tstb             more than 99K of memory?  F8FF 27   09                 beq    figle4  F901 1E   89                 exg    a,b       do upper digit now  F903 8B   30                 adda   #$30  F905 BD   FBA7               jsr    outch     output it  F908 1E   98                 exg    b,a       get low back  F90A BD   FB72     figle4    jsr    hexbyt    output byte  F90D BD   FB66               jsr    outsp     output space  F910 86   4B                 lda    #'K       output 'K'  F912 7E   FBA7     figle5    jmp    outch                                          * Disk boot command                       F915 BD   FA51     dboot     jsr    config    configure system                     *   F918 5F                      clrb  F919 CE   F100               ldu    #brdbas0  F91C 108E 4E20               ldy    #20000  F920 BD   FB88     dboot1    jsr    inchck    key pressed  F923 25   09                 bcs    dboot2  F925 17   0123               lbsr   delay  F928 31   3F                 leay   -1,y  F92A 26   F4                 bne    dboot1  F92C 20   0F                 bra    dboot3                     *  F92E BD   FB90     dboot2    jsr    inch      get character from keyboard  F931 81   0D                 cmpa   #$0d      ENTER?  F933 27   08                 beq    dboot3  F935 81   31                 cmpa   #'1  F937 22   04                 bhi    dboot3    invalid  F939 80   30                 suba   #'0  F93B 1F   89                 tfr    a,b                     *  F93D BD   F9D9     dboot3    jsr    loadip    load the ipl sector  F940 1026 022E               lbne   hexbyt    output bad status  F944 10CE BF38               lds    #sysstk   setup UniFLEX stack  F948 6E   84                 jmp    0,x       go do the boot                                          * Bad command                       F94A 8E   FC37     badcmd    ldx    #sorry    point to string  F94D BD   FB5B               jsr    pdata     output it  F950 39            dummy     rts              return                     UniFLEX Monitor ROM                  23:24:11  May 17, 2020   Page    7Memory Examine Command                                                   *                         * Examine memory (system)                     *  F951               examine  F951 BD   FBB6               jsr    getadr    get low address  F954 25   16                 bcs    exam99  F956 ED   5C                 std    lowadr,u  save low limit  F958 86   2D                 lda    #'-  F95A BD   FBA7               jsr    outch  F95D BD   FBB6               jsr    getadr    get high address  F960 25   0A                 bcs    exam99  F962 ED   5E                 std    hiadr,u   save high limit  F964 AE   5C                 ldx    lowadr,u  set up for dump  F966 10AE 5E                 ldy    hiadr,u >F969 BD   F96D               jsr    dumpXY    go print dump  F96C 39            exam99    rts                     *                     * dumpXY - Dump memory from (X) to (Y)                     *    (X) - Lowest address to dump                     *    (Y) - Highest address to dump                     *    jsr dumpXY                     *  F96D 34   70       dumpXY    pshs   x,y,u     save registers                     *                     * Print one line (16 bytes) of data                     * >F96F BD   F9C4     dump10    jsr    pcrlf     start a new print line  F972 A6   E4                 lda    0,s       print address  F974 BD   FB72               jsr    hexbyt  F977 A6   61                 lda    1,s  F979 BD   FB72               jsr    hexbyt  F97C BD   FB66               jsr    outsp  F97F BD   FB66               jsr    outsp  F982 AE   E4                 ldx    0,s  F984 C6   10                 ldb    #16       print 16 bytes  F986 34   04                 pshs   b  F988 A6   80       dump20    lda    ,x+       get next byte to print  F98A BD   FB72               jsr    hexbyt  F98D BD   FB66               jsr    outsp  F990 6A   E4                 dec    0,s       done?  F992 26   F4                 bne    dump20    no - go back  F994 AE   61                 ldx    1,s       now print characters  F996 BD   FB66               jsr    outsp  F999 BD   FB66               jsr    outsp  F99C C6   10                 ldb    #16  F99E E7   E4                 stb    0,s  F9A0 A6   80       dump30    lda    ,x+       get next byte  F9A2 81   20                 cmpa   #$20      printable?  F9A4 25   04                 blo    dump35    no  F9A6 81   7F                 cmpa   #$7F  F9A8 25   02                 blo    dump40    go print character  F9AA 86   2E       dump35    lda    #'.       print period for unprintableUniFLEX Monitor ROM                  23:24:11  May 17, 2020   Page    8Memory Examine Command                                F9AC BD   FBA7     dump40    jsr    outch     print character  F9AF 6A   E4                 dec    0,s       done?  F9B1 26   ED                 bne    dump30  F9B3 32   61                 leas   1,s       clean up stack  F9B5 BD   FB88               jsr    inchck    abort if character struck  F9B8 25   06                 bcs    dump99  F9BA AF   E4                 stx    0,s       update address  F9BC AC   62                 cmpx   2,s       any more?  F9BE 23   AF                 bls    dump10    yes - go to it  F9C0 8D   02       dump99    bsr    pcrlf  F9C2 35   F0                 puls   x,y,u,pc  return                     *                     * pcrlf - print carriage return/line feed                     *  F9C4 34   16       pcrlf     pshs   d,x       save registers  F9C6 8E   F9CE               ldx    #CRLF  F9C9 BD   FB5B               jsr    pdata  F9CC 35   96                 puls   d,x,pc    return  F9CE 0D 00         CRLF      fcc    $d,0                                          *                     * Map memory into buffer ($d000)                     *  F9D0 BD   FBC2     mapper    jsr    getbyt    get byte  F9D3 25   03                 bcs    mappe8  F9D5 B7   F40D               sta    datbox+$d  F9D8 39            mappe8    rts              return                                          *                     *   IDE Bootstrap                     *   reset the stack and set up direct addressing                     *   U contains controller base address                     *   B contains drive select bits                     *  F9D9               loadip    seti   irq,firq  disable irq and firq  F9DB 34   04                 pshs   b         save dest drive  F9DD C4   01                 andb   #%00000001  F9DF 34   04                 pshs   b         save drive bits  F9E1 27   04                 beq    loadi1  F9E3 86   10                 lda    #IDE_DSL  drive select bit  F9E5 A7   E4                 sta    0,s  F9E7               loadi1                     *                     *   quiesce the dma (in case it is active)                     *  F9E7 6F   C8 13              clr    dmaltc,u  disable everything                     *  F9EA CC   0040               ldd    #IDE_LBA  F9ED EA   E4                 orb    0,s       drive select bit  F9EF ED   4C                 std    ideadr3,u LBA 24...27, drive 0                     *  F9F1 EC   4E                 ldd    idecmst,u read statusUniFLEX Monitor ROM                  23:24:12  May 17, 2020   Page    9IDE Bootstrap                                         F9F3 C1   50                 cmpb   #(IDERDY+IDEDSC) idle  F9F5 26   46                 bne    loadxit   drive not ready                     *  F9F7 CC   0010               ldd    #IDERSTR  F9FA ED   4E                 std    idecmst,u restore drive >F9FC 17   004C     waitrst   lbsr   delay  F9FF EC   4E                 ldd    idecmst,u  FA01 C5   80                 bitb   #IDEBSY   drive busy?                     *            beq        waitrst                     * >FA03 17   0045     isnrdy    lbsr   delay  FA06 EC   4E                 ldd    idecmst,u check if done  FA08 C5   80                 bitb   #IDEBSY  FA0A 26   F7                 bne    isnrdy                     *              FA0C CC   0001               ldd    #1  FA0F ED   44                 std    idescnt,u sector count  FA11 5F                      clrb             LBA 0  FA12 ED   46                 std    ideadr0,u first sector LBA 0...7  FA14 ED   48                 std    ideadr1,u LBA 8...15  FA16 ED   4A                 std    ideadr2,u LBA 16...23  FA18 CC   0040               ldd    #IDE_LBA  FA1B AA   E4                 ora    0,s       drive select bit  FA1D ED   4C                 std    ideadr3,u LBA 24...27, drive 0  FA1F CC   0800               ldd    #bootorg  load real boot address  FA22 ED   C8 10              std    dmaadh,u  FA25 86   C0                 lda    #L_DREAD+L_DMAEN  FA27 A7   C8 13              sta    dmaltc,u  set high addr  FA2A C6   C8                 ldb    #IDEDRD  FA2C ED   4E                 std    idecmst,u  FA2E A6   C8 18    ider1     lda    idestat,u  FA31 85   80                 bita   #IDEINTR  FA33 27   F9                 beq    ider1     wait for done  FA35 EC   4E                 ldd    idecmst,u read status  FA37 C5   01                 bitb   #IDEERR  FA39 27   0A                 beq    doboot  FA3B 1F   98                 tfr    b,a                     * faillure  FA3D E7   61       loadxit   stb    1,s       save status  FA3F 86   FF                 lda    #$ff      set bad  FA41 A7   E4                 sta    0,s  FA43 35   86                 puls   d,pc                     *  FA45 8E   0800     doboot    ldx    #bootorg  where boot is loaded  FA48 4F                      clra             set status  FA49 35   86                 puls   d,pc      D has drive select info                     *  FA4B 86   40       delay     lda    #64       set up a delay counter  FA4D 4A            del       deca             decrement the delay count  FA4E 26   FD                 bne    del       hang in there for the count  FA50 39                      rts                     UniFLEX Monitor ROM                  23:24:12  May 17, 2020   Page   10IDE Bootstrap                                       UniFLEX Monitor ROM                  23:24:12  May 17, 2020   Page   11System Configuration                                                     *                     * Configure the system                     *                                          * code starts here  FA51 8E   99AA     config    ldx    #tstpat   setup pattern  FA54 108E 0210               ldy    #cormap+segmax setup page table pointer  FA58 C6   F7                 ldb    #LSTPAG   setup max page number                     * >FA5A BD   FACD     check     jsr    getpag    map in a page  FA5D BF   D0F0               stx    tstloc    write test pattern  FA60 BC   D0F0               cmpx   tstloc    is memory there?  FA63 26   16                 bne    nomem  FA65 34   04                 pshs   b         save count >FA67 BD   FACD     check2    jsr    getpag    map in all other pages  FA6A F7   D0F1               stb    tstloc+1  write index  FA6D C0   01                 subb   #1        dec count by 1  FA6F 24   F6                 bcc    check2  FA71 35   04                 puls   b >FA73 BD   FACD               jsr    getpag    reselect the page  FA76 F1   D0F1               cmpb   tstloc+1  is memory there?  FA79 27   01                 beq    gotmem                     * here if no memory  FA7B 4F            nomem     clra             set page number to zero                     * here for memory found  FA7C A7   A2       gotmem    sta    0,-y      store into mem table  FA7E C0   01                 subb   #1        dec the count  FA80 24   D8                 bcc    check                     *  FA82 30   A4                 leax   0,y       point to start of table                                          * setup system address space  FA84 6F   84       syssup    clr    sysres,x  clear out system and user pages  FA86 6F   01                 clr    useres,x  FA88 108E 0105               ldy    #sysmap+txtseg point to user segment  FA8C C6   05                 ldb    #5        set length ** changed from 5 for more  FA8E 8D   43       syssu2    bsr    getnxt    get next segment >FA90 1027 0049               lbeq   memfal    crash if no memory!  FA94 A7   A0                 sta    0,y+      save in map  FA96 5A                      decb             dec the count  FA97 26   F5                 bne    syssu2  FA99 0F   13                 clr    corcnt    set core count to zero  FA9B 108E 0110               ldy    #cormap   point to core map  FA9F 8D   32       syssu4    bsr    getnxt    get next page  FAA1 27   06                 beq    syssu5    no more?  FAA3 A7   A0                 sta    0,y+      save in table  FAA5 0C   13                 inc    corcnt    bump core counter  FAA7 20   F6                 bra    syssu4    repeat  FAA9 109F 14       syssu5    sty    lstmem    save last mem pointer  FAAC 8E   0100               ldx    #sysmap   point to system map  FAAF 108E F400               ldy    #datbox   point to datbox  FAB3 C6   10                 ldb    #segadr   get segment countUniFLEX Monitor ROM                  23:24:12  May 17, 2020   Page   12System Configuration                                  FAB5 A6   80       syssu6    lda    0,x+      reload datbox from map  FAB7 A7   A0                 sta    0,y+  FAB9 5A                      decb             dec the count  FABA 26   F9                 bne    syssu6                     * test timer  FABC 86   01                 lda    #1        enable timer  FABE B7   F004               sta    monpdra  FAC1 B6   F004               lda    monpdra   read value >FAC4 17   FF84               lbsr   delay  FAC7 B0   F004               suba   monpdra   is it running  FACA 27   27                 beq    notimr  FACC 39                      rts              return                                          * map in a memory page  FACD 1F   98       getpag    tfr    b,a       get page number  FACF B7   F40D               sta    datbox+tfrseg map into address space  FAD2 39                      rts              return                                          * get next valid memory segment  FAD3 8C   0210     getnxt    cmpx   #cormap+segmax end of map?  FAD6 27   04                 beq    getnx2  FAD8 A6   80                 lda    0,x+      get next page  FADA 27   F7                 beq    getnxt    keep looking if zero  FADC 39            getnx2    rts              return                                          * No memory panic >FADD BD   FB41     memfal    jsr    panic     report panic  FAE0 4E 6F 74 20             fcc    'Not Enough Memory!',0 >FAF3 BD   FB41     notimr    jsr    panic     report timer  FAF6 54 69 6D 65             fcc    'Timer not Running!',0                     *                     * Terminal I/O and bad interrupt handlers                     *                                          * Report unhandled interrupts, fixed sequence.  FB09 8D   36       unhand    bsr    panic  FB0B 49 52 51 20             fcc    'IRQ ',0  FB10 8D   2F       unswi     bsr    panic  FB12 53 57 49 20             fcc    'SWI ',0  FB17 8D   28       unswi2    bsr    panic  FB19 53 57 49 32             fcc    'SWI2',0  FB1E 8D   21       unswi3    bsr    panic  FB20 53 57 49 33             fcc    'SWI3',0  FB25 8D   1A       unnmi     bsr    panic  FB27 4E 4D 49 20             fcc    'NMI ',0  FB2C 8D   13       unfirq    bsr    panic  FB2E 46 49 52 51             fcc    'FIRQ',0  FB33 8D   0C                 bsr    panic  FB35 43 48 50 52             fcc    'CHPR',0                     *  FB3A 8D   05       cputrp    bsr    panic  FB3C 54 52 41 50             fcc    'TRAP',0UniFLEX Monitor ROM                  23:24:13  May 17, 2020   Page   13System Configuration                                                                          * Panic processing  FB41               panic     seti   mask      ints  FB43 8E   FC3A               ldx    #panicy   point to string  FB46 8D   13                 bsr    pdata     print it  FB48 35   10                 puls   x         get message  FB4A 8D   0F                 bsr    pdata     print it  FB4C 10CE BE80               lds    #romstk   set rom stack  FB50 7E   F8AB               jmp    montor    init romUniFLEX Monitor ROM                  23:24:13  May 17, 2020   Page   14System Configuration                                                                          * String display routine >FB53 BD   FBA7     newlin    jsr    outch     output cr  FB56 86   0A                 lda    #$a       setup line feed >FB58 BD   FBA7     putch     jsr    outch     output it  FB5B A6   80       pdata     lda    0,x+      get string character  FB5D 27   06                 beq    pdata2    end of string?  FB5F 81   0D                 cmpa   #$d       is it cr?  FB61 27   F0                 beq    newlin  FB63 20   F3                 bra    putch     go output char  FB65 39            pdata2    rts              return                                          * Output a space  FB66 34   02       outsp     pshs   a         save a  FB68 86   20                 lda    #$20      setup space  FB6A 8D   3B                 bsr    outch     output it  FB6C 35   82                 puls   a,pc      return                                          * Output hex word  FB6E 8D   02       hexwrd    bsr    hexbyt  FB70 1F   98                 tfr    b,a                                          * Output a hex byte  FB72 34   02       hexbyt    pshs   a         save byte  FB74 44                      lsra             shift right 4 bits  FB75 44                      lsra  FB76 44                      lsra  FB77 44                      lsra  FB78 8D   02                 bsr    hexdig    output it  FB7A 35   02                 puls   a         restore digit                                          * Output a digit in hex  FB7C 84   0F       hexdig    anda   #$0f      mask low bits  FB7E 8B   30                 adda   #'0       make ascii digit  FB80 81   39                 cmpa   #'9       is it digit?  FB82 23   23                 bls    outch  FB84 8B   07                 adda   #7        add letter bias  FB86 20   1F                 bra    outch                                          * Test for an input character  FB88 34   02       inchck    pshs   a         save a  FB8A B6   F000               lda    acia      get status  FB8D 44                      lsra             check status bit  FB8E 35   82                 puls   a,pc      return                                          * Input a character with echo  FB90 B6   F000     inch      lda    acia      get status  FB93 44                      lsra             check bit  FB94 24   FA                 bcc    inch      wait for character  FB96 B6   F001               lda    acia+1    get character  FB99 84   7F                 anda   #$7f      mask parity  FB9B 27   F3                 beq    inch      ignore nullsUniFLEX Monitor ROM                  23:24:13  May 17, 2020   Page   15System Configuration                                  FB9D 81   61                 cmpa   #'a       is it lower case?  FB9F 25   06                 blo    outch  FBA1 81   7A                 cmpa   #'z  FBA3 22   02                 bhi    outch  FBA5 80   20                 suba   #$20      make upper case                                          * Output character routine  FBA7 34   02       outch     pshs   a         save character  FBA9 B6   F000     outchw    lda    acia      get status  FBAC 85   02                 bita   #2        check status  FBAE 27   F9                 beq    outchw  FBB0 35   02                 puls   a         get character  FBB2 B7   F001               sta    acia+1    output it  FBB5 39                      rts              return                                          * Get address  FBB6 8D   0A       getadr    bsr    getbyt    get byte  FBB8 A7   E3                 sta    0,--s     save on stack  FBBA 25   04                 bcs    getext  FBBC 8D   04                 bsr    getbyt    get byte  FBBE A7   61                 sta    1,s  FBC0 35   86       getext    puls   d,pc      return                                          * Get byte  FBC2 32   7F       getbyt    leas   -1,s  FBC4 8D   11                 bsr    gethex    input hex digit  FBC6 25   0C                 bcs    hexit  FBC8 48                      lsla  FBC9 48                      lsla  FBCA 48                      lsla  FBCB 48                      lsla  FBCC A7   E4                 sta    0,s  FBCE 8D   07                 bsr    gethex    get hex digit  FBD0 25   02                 bcs    hexit  FBD2 AA   E4                 ora    0,s  FBD4 32   61       hexit     leas   1,s       clean stack  FBD6 39                      rts              return                                          * Get hex digit >FBD7 BD   FB90     gethex    jsr    inch      get character  FBDA 81   30                 cmpa   #'0       is it digit?  FBDC 25   11                 blo    nothex  FBDE 81   39                 cmpa   #'9  FBE0 23   0A                 bls    idigit  FBE2 81   41                 cmpa   #'A  FBE4 25   09                 blo    nothex  FBE6 81   46                 cmpa   #'F  FBE8 22   05                 bhi    nothex  FBEA 80   07                 suba   #'A-'0-10  FBEC 80   30       idigit    suba   #'0  FBEE 39                      rts              return  FBEF 1A   01       nothex    sec              set carryUniFLEX Monitor ROM                  23:24:13  May 17, 2020   Page   16System Configuration                                  FBF1 39                      rts              return                                          * Initialize the terminal  FBF2 34   06       tinit     pshs   d         save reg  FBF4 86   03                 lda    #$3       reset acia  FBF6 B7   F000               sta    acia  FBF9 86   15                 lda    #$15      set up bits & stuff  FBFB B7   F000               sta    acia  FBFE CC   3A98               ldd    #15000    delay some here  FC01 83   0001     tinit2    subd   #1  FC04 26   FB                 bne    tinit2  FC06 35   86                 puls   d,pc      return                                          * messages  FC08 0D            hello     fcb    $d  FC09 55 6E 69 46             fcc    'UniFLEX Boot ROM (CPU09:MMU/IDE/MON:0.05)',$d,0  FC34 0D            prompt    fcb    $d  FC35 25 00                   fcc    '%',0  FC37 3F 3F 00      sorry     fcc    '??',0  FC3A 0D            panicy    fcb    $d  FC3B 50 61 6E 69             fcc    'Panic -> ',0                     UniFLEX Monitor ROM                  23:24:13  May 17, 2020   Page   17Memory Modify Command                                                    *                     * Modify system memory                     *  FC45               modify  FC45 17   FF6E               lbsr   getadr    get starting address  FC48 25   53                 bcs    mod99     exit if error  FC4A ED   5C                 std    lowadr,u  save address                     *  FC4C 8E   FC9E     mod10     ldx    #modm00  FC4F BD   FB5B               jsr    pdata  FC52 A6   5C                 lda    lowadr,u  print address  FC54 BD   FB72               jsr    hexbyt  FC57 A6   5D                 lda    lowadr+1,u  FC59 BD   FB72               jsr    hexbyt  FC5C BD   FB66               jsr    outsp  FC5F AE   5C                 ldx    lowadr,u  get byte address  FC61 A6   84                 lda    0,x       get value  FC63 34   02                 pshs   a         save current value  FC65 BD   FB72               jsr    hexbyt    output it  FC68 BD   FB66               jsr    outsp     print a space  FC6B BD   FBD7               jsr    gethex    get a hex digit  FC6E 25   1F                 bcs    mod30     jump if error  FC70 48                      asla  FC71 48                      asla  FC72 48                      asla  FC73 48                      asla  FC74 A7   E4                 sta    0,s       update value  FC76 BD   FBD7               jsr    gethex    get second hex digit  FC79 25   20                 bcs    mod40     exit if error  FC7B AA   E0                 ora    ,s+       compute total value  FC7D AE   5C       mod20     ldx    lowadr,u  get memory address  FC7F A7   80                 sta    ,x+       update memory  FC81 AF   5C                 stx    lowadr,u  update address  FC83 20   C7                 bra    mod10     continue with next byte  FC85 35   02       mod50     puls   a  FC87 AE   5C                 ldx    lowadr,u  FC89 30   1F                 leax   -1,x  FC8B AF   5C                 stx    lowadr,u  FC8D 20   BD                 bra    mod10                     *  FC8F 81   5E       mod30     cmpa   #'^       is it "go back" char?  FC91 27   F2                 beq    mod50  FC93 81   2E                 cmpa   #'.       is it "go on" char?  FC95 26   04                 bne    mod40     no - exit  FC97 35   02                 puls   a         restore original value  FC99 20   E2                 bra    mod20     yes - move to next address                     *  FC9B 32   61       mod40     leas   1,s       clean up stack  FC9D 39            mod99     rts              return                     *  FC9E 0D 20 20 2D   modm00    fcc    $d,'  - ',0                     *UniFLEX Monitor ROM                  23:24:14  May 17, 2020   Page   18Memory Modify Command                                                    * J - Jump to user program                     *  FCA4               jumpprg  FCA4 BD   FBB6               jsr    getadr    get routine address  FCA7 25   04                 bcs    jump99    exit if error  FCA9 1F   01                 tfr    d,x       get address  FCAB AD   84                 jsr    0,x       call routine  FCAD 39            jump99    rts                     UniFLEX Monitor ROM                  23:24:14  May 17, 2020   Page   19High-Level Interrupt Handling                                                                 *                     * Interrupt handling code - Highest level                     *                     * Should match with inthand code in specific kernel version                     *  FE10                         org    hirom                                          * Process firq                     * either CC,PC or CC....PC (in 6809 or 6309 stack format)                     *                     *   13 PCL  PCL    PCL                     *   12 PCH  PCH    PCH                     *   11 CC   CC     UL                     *   10      -1,S   UH                     *   9       YL     YL                     *   8       YH     YH                     *   7       XL     XL                     *   6       XH     XH                     *   5       DP     DP                     *   4       F      F                     *   3       E      E                     *   2       B      B                     *   1       A      A                     *   0       CC     CC                     *                     * E,F,I are set in new CC  FE10 32   7F       ufirq     leas   -1,s      make room on stack  FE12 34   38                 pshs   dp,x,y    push all regs like irq  FE14                         pshsw  FE16 34   07                 pshs   cc,d      push all regs like irq  FE18 A6   6B                 lda    11,s      get old cc  FE1A EF   6A                 stu    10,s      store proper u reg  FE1C 8A   80                 ora    #$80      set entire bit in cc  FE1E A7   E4                 sta    0,s  FE20 B6   FE00               lda    stkcnt  FE23 81   03                 cmpa   #3  FE25 23   02                 bls    01f  FE27 32   E6                 leas   a,s       was already stacked  FE29 A6   E4       01        lda    0,s       get cc  FE2B 8E   000A               ldx    #frqvec   point to firq vector  FE2E 1F   8A                 tfr    a,cc      should be safe  FE30 20   43                 bra    process                                          * Process a SWI type interrupt  FE32 8E   0002     uswi      ldx    #swivec   get vector  FE35 20   3E                 bra    process   process the int                                          * Process an TRAP interrupt  FE37 C6   07       utrap     ldb    #FALTI    for now  FE39 20   2D                 bra    uflt                     UniFLEX Monitor ROM                  23:24:14  May 17, 2020   Page   20High-Level Interrupt Handling                                            * Process user external  FE3B 1F   AB       unmi      tfr    cc,dp  FE3D 10AE 6C                 ldy    STKSIZ-2,s old PC  FE40 7F   FE02               clr    k_u_map   bring in kernel map                     * now BXXX is ust area  FE43 10FF BF40               sts    usp       save stack  FE47 BF   BF57               stx    userx  FE4A FD   BF55               std    userd  FE4D 10BF BF59               sty    userpc  FE51 10CE BF38               lds    #sysstk   set system stack                     *  FE55 4F                      clra  FE56 1E   8B                 exg    a,dp      get cc  FE58 B7   BF54               sta    usercc  FE5B 8E   0008               ldx    #nmivec   set vector  FE5E C6   07                 ldb    #FALTI    set fault  FE60 85   50                 bita   #$50      ints masked?  FE62 27   21                 beq    prcs2  FE64 C6   09                 ldb    #TIMEI    set timeout  FE66 20   1D                 bra    prcs2                                          * Process fault  FE68 8E   0008     uflt      ldx    #nmivec   set for nmi vector  FE6B 20   08                 bra    process                                          * swi2 processor  FE6D 8E   0004     uswi2     ldx    #sw2vec   set vector  FE70 20   03                 bra    process                                          * Process an IRQ type interrupt  FE72 8E   0000     uirq      ldx    #irqvec   get vector                                          * Process the user interrupt, can't use user stack!  FE75 1F   AB       process   tfr    cc,dp  FE77 7F   FE02               clr    k_u_map   task mapper to kernel  FE7A 10FF BF40               sts    usp       save user stack pointer  FE7E 10CE BF38               lds    #sysstk   set system stack  FE82 4F                      clra             set dp to 0  FE83 1E   8B                 exg    a,dp      old cc                     *  FE85 0F   0F       prcs2     clr    kernel  FE87 1F   8A                 tfr    a,cc      restore cc  FE89 AD   94                 jsr    [0,x]     execute int handler  FE8B 20   25                 bra    uswi32    return in common handler                     *                     * Handle swi3 - system call interrupt                     *  FE8D 1C   FE       uswi3     clc              clear the carry bit  FE8F 1F   AB                 tfr    cc,dp     save cc  FE91                         seti   mask      ints  FE93 7F   FE02               clr    k_u_map   map in kernel  FE96 FD   BF55               std    userd     save d registerUniFLEX Monitor ROM                  23:24:14  May 17, 2020   Page   21High-Level Interrupt Handling                         FE99 BF   BF57               stx    userx     save x register  FE9C 10FF BF40               sts    usp       save user stack pointer  FEA0 10CE BF38               lds    #sysstk   set system stack  FEA4 4F                      clra             set dp to 0  FEA5 1E   B8                 exg    dp,a  FEA7 B7   BF54               sta    usercc    save user cc                     *  FEAA 0F   0F                 clr    kernel  FEAC                         clri                     *  FEAE AD   9F 0006            jsr    [sw3vec]  execute handler                     *                     * common return from interrupt handler                     *  FEB2               uswi32    seti   mask      ints  FEB4 96   10                 lda    chpflg    change tasks?  FEB6 27   04                 beq    uswi35  FEB8 AD   9F 0011            jsr    [chtask]  change tasks                     *  FEBC               uswi35    clri   open      interrupt window  FEBE 12                      nop  FEBF                         seti  FEC1 0A   0F                 dec    kernel  FEC3 86   BF                 lda    #ubasdp  FEC5 1F   8B                 tfr    a,dp               00BF            setdp  ubasdp  FEC7 10DE 40                 lds    <usp      reset to user stack  FECA 0D   42                 tst    <urelod   new task?  FECC 26   10                 bne    remap                     *  FECE 96   43       usrrti    lda    <umapno   get current task  FED0 27   0C                 beq    remap     blowup if 0 map number  FED2 B7   FE03               sta    tlatch    set task mapper for return                      *  FED5 86   80       allrti    lda    #%10000000 select user map / vector set  FED7 B7   FE02               sta    k_u_map   set user map                     * release kernel map, but just so that the RTI opcode is read yet  FEDA B7   FE01     krnrti    sta    cuddwn    adjust int count/fuse  FEDD 3B                      rti                                          * Load map registers for new task  FEDE 96   43       remap     lda    <umapno   get task number  FEE0 27   79                 beq    ufail  FEE2 4C                      inca             bias by 1, we start at end.....  FEE3 CE   F400               ldu    #datbox   point to dat ram  FEE6 C6   10                 ldb    #segadr   set segment size (16)  FEE8 3D                      mul              calculate map location  FEE9 33   CB                 leau   d,u       point to it  FEEB 0F   42                 clr    <urelod   clear flag  FEED 109E 52                 ldy    <usrmap+14 load maps  FEF0 9E   50                 ldx    <usrmap+12  FEF2 DC   4E                 ldd    <usrmap+10UniFLEX Monitor ROM                  23:24:15  May 17, 2020   Page   22High-Level Interrupt Handling                         FEF4 36   36                 pshu   d,x,y  FEF6 109E 4C                 ldy    <usrmap+8  FEF9 9E   4A                 ldx    <usrmap+6  FEFB DC   48                 ldd    <usrmap+4  FEFD 36   36                 pshu   d,x,y  FEFF 9E   46                 ldx    <usrmap+2  FF01 DC   44                 ldd    <usrmap  FF03 36   16                 pshu   d,x       finish load  FF05 20   C7                 bra    usrrti               0000            setdp  0                                          *                     * kernel irq                     *  FF07 0C   0F       kirq      inc    kernel  FF09 AD   9F 0000            jsr    [irqvec]  process interrupt  FF0D 0A   0F                 dec    kernel  FF0F 20   C9                 bra    krnrti                     *                     * kernel external                     *  FF11 BE   E800     knmi      ldx    dbsign    check if kernel debug present  FF14 8C   A55A               cmpx   #DEBSIG   special pattern  FF17 26   04                 bne    knmix     no, just return  FF19 AD   9F E802            jsr    [debnmi]  enter debugger  FF1D 20   BB       knmix     bra    krnrti                                          *                     * kernel mode firq                     *                     * E,F,I are set in new CC  FF1F 32   7F       kfirq     leas   -1,s      make room on stack  FF21 34   38                 pshs   dp,x,y    push all regs like irq  FF23                         pshsw  FF25 34   07                 pshs   cc,d      push all regs like irq  FF27 A6   6B                 lda    11,s      get old cc  FF29 EF   6A                 stu    10,s      store proper u reg  FF2B 8A   80                 ora    #$80      set entire bit in cc  FF2D A7   E4                 sta    0,s  FF2F B6   FE00               lda    stkcnt  FF32 81   03                 cmpa   #3        was is small stack?  FF34 23   02                 bls    01f  FF36 32   E6                 leas   a,s       all was already stacked                     *  FF38 0C   0F       01        inc    kernel  FF3A AD   9F 000A            jsr    [frqvec]  FF3E 0A   0F                 dec    kernel  FF40 20   98                 bra    krnrti                                          *  FF42 BD   FB41     hfail     jsr    panic     hardware rti failure  FF45 48 61 72 64             fcc    'Hardware RTI failure ',0UniFLEX Monitor ROM                  23:24:15  May 17, 2020   Page   23High-Level Interrupt Handling                         FF5B BD   FB41     ufail     jsr    panic     blowup on 0 map number  FF5E 5A 65 72 6F             fcc    'Zero map ',0                                          *                     * System reset                     *  FF68 4F            kreset    clra  FF69 B7   FE01               sta    cuddwn    undo reset fetch                     * only HW level 0 allows for acces DAT  FF6C B7   FE03               sta    tlatch  FF6F B7   FE02               sta    k_u_map   map in kernel  FF72 CC   FEFF               ldd    #rommap  FF75 FD   F40E               std    datbox+ioseg set E...+F...  FF78 7E   F80E               jmp    rinit     do sys init                     *                     * System interrupts (unhandled)                     *  FF7B 7E   FB10     kswi      jmp    unswi  FF7E 7E   FB17     kswi2     jmp    unswi2  FF81 7E   FB1E     kswi3     jmp    unswi3                     *kfirq     jmp     unfirq  FF84 7E   FB25     kextrn    jmp    unnmi  FF87 7E   FB3A     ktrap     jmp    cputrp                                          *                     * interrupt vector definitions                     *                       FFE0                         org    usrvec                       FFE0 FE37                    fdb    utrap  FFE2 FE8D                    fdb    uswi3  FFE4 FE6D                    fdb    uswi2  FFE6 FE10                    fdb    ufirq  FFE8 FE72                    fdb    uirq  FFEA FE32                    fdb    uswi  FFEC FE3B                    fdb    unmi  FFEE FF68                    fdb    kreset                       FFF0                         org    vector                       FFF0 FF87                    fdb    ktrap  FFF2 FF81                    fdb    kswi3  FFF4 FF7E                    fdb    kswi2  FFF6 FF1F                    fdb    kfirq  FFF8 FF07                    fdb    kirq  FFFA FF7B                    fdb    kswi  FFFC FF11                    fdb    knmi  FFFE FF68                    fdb    kreset                                                    endUniFLEX Monitor ROM                  23:24:15  May 17, 2020   Page   24High-Level Interrupt Handling                       0 Error(s) detected    14 Excessive BRANCH/JUMP(S) detectedUniFLEX Monitor ROM                  23:24:15  May 17, 2020   Page   25High-Level Interrupt Handling                       Symbol Table:Absolute Symbols:BLKHOL   00FD   CRLF     F9CE   DATSENSE 0000   DEBSIG   A55A   DIVZRO   00FF   FALTI    0007   IDEBSY   0080   IDEDMRQ  0040   IDEDRD   00C8   IDEDSC   0010   IDEDWR   00CA   IDEERR   0001   IDEINTR  0080   IDEIO16  0001   IDEIORY  0002   IDEIRQ   0004   IDERDY   0040   IDERSTR  0010   IDE_DSL  0010   IDE_LBA  0040   ILGOPC   00FF   KILLI    0005   LSTPAG   00F7   L_ADDR   000F   L_CSEL   0010   L_DMAEN  0040   L_DREAD  0080   L_INTEN  0020   PATIME   0001   PATIMR   0080   PBLGHT   00FF   PBMTRP   0080   PIRQMSK  0080   STKSIZ   000E   TIMEI    0009   acia     F000   allrti   FED5   ascii    FFE4   badcmd   F94A   bootorg  0800   brdbas0  F100   bufseg   000C   check    FA5A   check2   FA67   chpflg   0010   chtask   0011   commnd   F8D1   config   FA51   corcnt   0013   cormap   0110   count    FFFA   cpumod   000D   cputrp   FB3A   cputyp   000C   cuddwn   FE01   datbox   F400   datsiz   0400   dboot    F915   dboot1   F920   dboot2   F92E   dboot3   F93D   dbsign   E800   debini   E804   debnmi   E802   del      FA4D   delay    FA4B   digit    FFFB   dlen     001C   dmaadh   0010   dmaadl   0011   dmaltc   0013   doboot   FA45   dummy    F950   dump10   F96F   dump20   F988   dump30   F9A0   dump35   F9AA   dump40   F9AC   dump99   F9C0   dumpXY   F96D   exam99   F96C   examine  F951   figle2   F8F5   figle4   F90A   figle5   F912   figlef   F8E9   frqvec   000A   getadr   FBB6   getbyt   FBC2   getext   FBC0   gethex   FBD7   getnx2   FADC   getnxt   FAD3   getpag   FACD   gotmem   FA7C   hello    FC08   hexbyt   FB72   hexdig   FB7C   hexit    FBD4   hexwrd   FB6E   hfail    FF42   hiadr    FFFE   hirom    FE10   ideadr0  0006   ideadr1  0008   ideadr2  000A   ideadr3  000C   idecmst  000E   idedat   0000   ideerft  0002   ider1    FA2E   idescnt  0004   idestat  0018   idigit   FBEC   inch     FB90   inchck   FB88   ioseg    000E   irqvec   0000   isnrdy   FA03   jump99   FCAD   jumpprg  FCA4   k_u_map  FE02   kernel   000F   kextrn   FF84   kfirq    FF1F   kirq     FF07   knmi     FF11   knmix    FF1D   kreset   FF68   krnrti   FEDA   kswi     FF7B   kswi2    FF7E   kswi3    FF81   ktrap    FF87   limit    FFF7   loadi1   F9E7   loadip   F9D9   loadxit  FA3D   lowadr   FFFC   lstmem   0014   mappe8   F9D8   mapper   F9D0   memfal   FADD   memmsk   0017   mod10    FC4C   mod20    FC7D   mod30    FC8F   mod40    FC9B   mod50    FC85   mod99    FC9D   modify   FC45   modm00   FC9E   monpcra  F005   monpcrb  F007   monpdra  F004   monpdrb  F006   montor   F8AB   newlin   FB53   nmivec   0008   nomap    00FD   nomem    FA7B   nothex   FBEF   notimr   FAF3   nxtcmd   F8B0   offset   FFF5   outch    FBA7   outchw   FBA9   outsp    FB66   panic    FB41   panicy   FC3A   pcrlf    F9C4   pdata    FB5B   pdata2   FB65   prcs2    FE85   process  FE75   prompt   FC34   putch    FB58   rammap   0100   remap    FEDE   rhexbyt  F80C   rinch    F806   rinchk   F804   rinit    F80E   rinit2   F83D   rinit4   F8A2   rinit8   F827   rinit9   F820   romadr   F800   rommap   FEFF   romseg   000F   romspr   0018   romstk   BE80   routch   F808   rpdata   F80A   rrinit   F800   rtinit   F802   searc2   F8D0   search   F8C6   segadr   0010   segmax   0100   segmnt   FFF4   segsiz   1000   sorry    FC37   stkcnt   FE00   sw2vec   0004   sw3vec   0006   swivec   0002   sysmap   0100   sysram   0100   sysres   0000   sysseg   0000   sysstk   BF38   syssu2   FA8E   syssu4   FA9F   syssu5   FAA9   syssu6   FAB5   syssup   FA84   teluch   0016   tfrseg   000D   tinit    FBF2   tinit2   FC01   tlatch   FE03   tstloc   D0F0   tstpat   99AA   txtseg   0005   UniFLEX Monitor ROM                  23:24:16  May 17, 2020   Page   26High-Level Interrupt Handling                       uargp    BF3C   ubasdp   00BF   ubasea   BF00   udummy   BF38   ufail    FF5B   ufirq    FE10   uflt     FE68   uirq     FE72   umapno   BF43   unfirq   FB2C   unhand   FB09   unmi     FE3B   unnmi    FB25   unswi    FB10   unswi2   FB17   unswi3   FB1E   urelod   BF42   usercc   BF54   userd    BF55   useres   0001   userpb   BF5B   userpc   BF59   userx    BF57   usp      BF40   usrmap   BF44   usrrti   FECE   usrseg   000B   usrtop   000E   usrvec   FFE0   ustksz   BF3B   uswi     FE32   uswi2    FE6D   uswi2v   BF3E   uswi3    FE8D   uswi32   FEB2   uswi35   FEBC   utrap    FE37   vector   FFF0   waitrst  F9FC   