** driver to set/get terminal speed settings*        opt     nol         lib     environment.h         lib     ../include/sysdefs.h         lib    ../include/inttab.h        opt     lis        data        name    tspddrvr        global  tspdopn,tspdcls,tspdspcl        ifc     &a,'IOP'        global  tspdiopd        endiftspd_dev fdb   $ffff               device codetspd_dptr fdb  $ffff               inttab pointertspd_flg  fcb  0         ifc    &a,'IOP'** this table MUST have the same length as brbupr in tty_acia.t in iop_cpu* baudrate table for 32 IOP ports,check max*tspd_iop  fdb  $ffff,$ffff,$ffff,$ffff   acia 0,1,2,3          fdb  $ffff,$ffff,$ffff,$ffff   acia 4,5,6,7,          fdb  $ffff,$ffff,$ffff,$ffff   acia 8,9,10,11          fdb  $ffff,$ffff,$ffff,$ffff   acia 12,13,14,15MAX_IOPS  equ  (*-tspd_iop)/2            max ports allowed         endif** drivers hould be used exclusieve, i.e. single accesstspdopn tst     tspd_flg        bne     01f        inc     tspd_flg        lbsr    tspd_ini         init driver vars        rts01      lda     #EBSY        sta     uerror        rts*tspdcls tst     tspd_flg        beq     01f        clr     tspd_flg        rts01      lda     #EPRM        sta     uerror        rts** on ntry D= device maj/min, X=0flags, Y=chrtab entry*tspdspcl equ     *        tfr     x,y             save flag        cmpy    #0        bne     tspd_get*  get data from usargx, do SET here        ldx     tspd_dev        cmpx    #$ffff        bne     01f        ldd     usarg0          device info        cmpa    #LCLTTY        bne     71f        lbsr    tspdfdev        find device entry10      stx     tspd_dptr        cmpx    #$ffff        beq     tspd_er1        not found        ldd     usarg0          set we initialized it        std     tspd_dev        rts                     ok, phase 1 finished*71        ifc     &a,'IOP'        cmpa    #IOPTTY         IOP port?        bne     tspd_er1        subb    #IOPTDMIN       first IOP tty device        blo     tspd_er1        cmpb    IOP0BASE+NUM_TRM        bhs     tspd_er1**       ldx     #ttybuf         ttyget*       jsr     iop_spcl        this updates the local info        ldx  #-1        bra     10b        endif*01      ldx     tspd_dptr       get pointer to device info        cmpx    #$ffff        beq     tspd_er1        ldd     inbrbu,x        does it have baudrate hw?        beq     tspd_er1*        ldd     usarg0          check if we did well        cmpd    indev,x        bne     tspd_er1        ldy     inbrbu,x        get pointer to data byte        ldb     usarg1+1        fetch low byte        andb    #$0f        stb     inspcl,x        update default setting        lda     inbrmsk+1,x        coma                    invert mask        anda    0,y        pshs    a               save intermediate data        lda     inbrmsk+1,x       original mask bits again        cmpa    #$0f        beq     01f             low or high nibble        lslb        lslb        lslb        lslb01      orab    0,s+            set new data        stb     0,y             save it        ldy     instat,x        get ACIA address        stb     2,y             go set latch        rts*tspd_er1 equ    *        lda     #EBDEV        sta     uerror        rts* put data to Y, do get heretspd_get equ     *        ldx     tspd_dev        device vector        stx     0,y++        cmpx    #$ffff          is it unset?        beq     01f        pshs    y        ldx     tspd_dptr        ldy     inbrmsk,x       get mask        ldx     inbrbu,x        baudrate info        beq     02f             no brg        clra        ldab    0,x        cmpy    #$000f          low nible        beq     40f        lsrb        lsrb        lsrb        lsrb40      andb    #$0f        puls    y        bra     10f02      puls    y01      ldd     #-1*10      std     0,y++           either baudrate or invalid        rts** locate device info in inttab,* D contains maj/min of device* on return X point to entry* $ffff if not found*tspdfdev equ    *        pshs    d        ldx     #inttab        ldb     0,x+            # of entries        pshs    b        beq     15f             none?*05      ldd     1,s        cmpd    indev,x         check it        beq     10f        leax    INTSIZ,x        next netry        dec     0,s        bne     05b15      ldx     #$ffff          not found10      leas    1,s             purge counter        puls    d,pc***tspd_ini equ    *        ldd     #$ffff        std     tspd_dev        set device invalid        std     tspd_dptr        rts        ifc     &a,'IOP'** tspdiopd, find port from IOP* D contains maj/min* on return X has reference value* $ffff is not foundtspdiopd equ    *         subb   #IOPTDMIN       get first iop tty         blo    01f         cmpb   #MAX_IOPS       max allocation         bhi    01f             error         cmpb   IOP0BASE+NUM_TRM         bhs    01f*         ldx    #tspd_iop         lslb         abx         rts01       ldx    #$ffff         ldd    #0         rts         endif        end