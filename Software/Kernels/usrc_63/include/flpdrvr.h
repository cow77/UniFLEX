        pag** This is the header file for the kernel flpdrvr.t and* for gppflpdrvr.t** BIT defines* IO defines        ifc     &b,'GPPFLP'flpdpr  equ     $0000        else        global  flpdpr,flpintflpdpr  equ     $e000   base address controller 0        endif** OFFSET's in Dual Port Ram*flrflg  equ     0       transaction read/write flag (copy of bfflag)flblkh  equ     1       block address high (unused)flblkm  equ     2       midflblkl  equ     3       lowfltsiz  equ     4       transaction size (total bytes)fltxfr  equ     6       transferred data size (actual bytes)flstat  equ     8       result status (error)fldriv  equ     9       which driveflnwop  equ     10      driver new open flag* ttyget/ttyset byte parameters for the selected drivefltsid  equ     11      side      floppy ttyget/set bytesfltden  equ     12      density* DPR_DMAX sets the locationflpfifo equ     $20     offset to DPR fifo buffer* last 16 bytes are specialfio2cp  equ     $3fc    debug port data from IO to CPUfcp2io  equ     $3fd    debug port data from CPU to IO* 'postbox' locations between the 2 sides of the DPR* set INT when written (and enabled)flpint  equ     $3fe   IOP tells you it did somethingflptel  equ     $3ff   tell IOP you want something* controller typeFDC     set     2793** data inverse maskEOR4FDC equ     0               00 = 2793, FF is 2791** control latch out (fo4lat)*LA_SID  equ     %00010000       side selectLA_SDN  equ     %00100000       dens select 0=DD/1=SDLA_8_5  equ     %01000000       8"/5" data rate 0=8"/1=5"LA_HLT  equ     %10000000       toggle head load timer** status buffer (fo4sta)*ST_INT  equ     %01000000       interrupt from FDCST_DRQ  equ     %10000000       data request from FDCFD_ERR  equ     %10000000       error flag in response** FDC Commands  (fo2cmd)*FD_RST  equ     $08             restore   (fastest step rate)FD_SEK  equ     $18             seek      (fastest step rate)FD_SRD  equ     $88             read sector dataFD_SWR  equ     $AC             write sector dataFD_MRD  equ     $98             read multiple sectorsFD_MWR  equ     $BC             write multiple sectorsFD_RTR  equ     $E4             read trackFD_WTR  equ     $F4             write trackFD_FIN  equ     $D0             force interrupt** FDC status bits (fo2cmd)*FS_BUSY equ     $01             busy bit           [*]FS_DRQ  equ     $02             data request bit   [2]FS_IDX  equ     $02             index pulse        [1]FS_TRK0 equ     $04             track zero present [1]FS_LOST equ     $04             lost data          [2]FS_CRC  equ     $08             CRC error detected [2]FS_SKER equ     $10             seek error         [1]FS_RNF  equ     $10             record not found   [2]FS_HLD  equ     $20             head loaded        [1]FS_WRP  equ     $40             write protect      [1]+WFS_NRDY equ     $80             drive not ready    [*]FS_RWOK equ     $D8             read/write OK mask [2]** fdc hardware*fdcbas  equ     $8000           FDC controller* subject to EOR4FDCfo2cmd  equ     0               offset to command registerfo2trk  equ     1               offset to track registerfo2sec  equ     2               offset to sector registerfo2dat  equ     3               offset to data register* not subject to EOR4FDCfo4lat  equ     4               drive,side,density latchfo4sta  equ     8               fdc status buffer* HW debug selectfo2trg  equ     12              scope trigger @ this address