          opt    nol          lib    environment.h        lib     ../include/sysdefs.h        lib     ../include/ust.h          opt    lis          sttl   kernel SWI3 Handler          pag          data          global  swi3han** SWI3 (System call) interrupt handler*  -- Fetch remaining arguments and place in User Block*  -- Call system call handler*  -- Store return parameters on stack*  -- Return to program (via ROM)* 14* 13  PCL* 12  PCH* 11  UL        PCL* 10  UH        PCH* 9   YL        UL* 8   YH        UH* 7   XL        YL* 6   XH        YH* 5   DP        XL* 4   F         XH* 3   E         DP* 2   B         B* 1   A         A* 0   CC        CC*swi3han   ldx     usp        get user stack pointer** get the syscal byte via the PC on stack, bump it, put it back*          ldb     ustksz      if set, take this          bne     02f          ldb     #STKREG     if NOT set,force kernel stacksize02        subb    #2         offset stacksize to PC          abx          pshs    x          save address for later          jsr     gtuwrd     get the pc          pshs    d          save it          tfr     d,x        point to pc location          jsr     gtubyt     get post byte          stb     upostb     save in user block          puls    d          get pc back          addd    #1         bump past post byte          std     urglst+UPC save in user block          puls    x          jsr     ptuwrd     set back on stack*          jsr     syscl      process system call** put result registers, CC, D, X, PC back in u9≤π9∫0±µÜïê62<:π∏87¥∑::7ê:π≤π9∫0±µÜê621:π3∂9∫™°°ê3≤∫!°ñ±∑≤2πÜê59π8::±<∫8:∫7∑9∫0±µÜê62∞ºñ<87¥∑::7ê292≥Üê622:π3∂9∫™¢3≤∫292≥Üê59π8::ªπ28:∫7∑9∫0±µÜê621:π∫5πΩ4≥9≤∫:0µ≤ê4∫ê172ê3ê621©™%©"£Üò9∫±1úê87¥∑::7ê,92≥Üê0±<ê622:π3∂9∫™¨3≤∫<92≥Üê         jsr     ptuwrd     put on stack          leax    6,x        point to pc          ldd     urglst+UPC get user pc          jsr     ptuwrd     put on stack          rts     return